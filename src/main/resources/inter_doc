jQuery接口

1.用户登陆
$.ajax({
	url :  "/user/login",
	type : "GET",
	data : 	{email:.. ,password:.. },
	dataType : "json",
	success :   //model里添加token,返回"Success"
         失败：  //model.addAttribute("result","账号密码错误");
})

2. 发送邮件(到指定邮箱获取验证码)
$.ajax({
	url :  "/user/sendEmail",
	type : "POST",
	data : 	{email},
	async: false,
	dataType : "json",
	success : model.put("result",true) ;
              model.put("code",code); //验证码，是否正确交由前端判断
     失败：    model.put("result",false);
              model.put("code", "-1");
})

3. 用户提交注册
$.ajax({
	url :  "/user/register",
	type : "POST",
	data : 	{email:.. ,password:.. } ,
	dataType : "json",
	success :  model.put("result",true) ;
               model.put("message","success");
    失败： model.put("result",false) ;
          model.put("message","//各种失败原因");
})


4.用户登出
$.ajax({
	url :  "/user/logout",
	type : "GET",
	data : 	''

})

5.用户建表 （通过表格填写列属性）
url: "/data/createTableByColumn"
data: {
	userid : ,
	tableName : ,
	map  : [ ] ,
	    //Map<String,ColumnVO>  ,比如：map = ["cvo1":cvo1,"cvo2":cvo2] ;
	    //cvo1 = [ "columnName":"c1","columnType":"ColumnType.INT","description":"NOT NULL PRIMARY KEY"]
	    //cvo2 = [ "columnName":"c2","columnType":"ColumnType.STRING","description":"NOT NULL"]
	description : ...
	success : model.addAttribute("result",true);
              model.addAttribute("tableID",tableID);
    失败：     model.addAttribute("result",false);
}

//vo.ColumnVO: String columnName ; ColumnType columnType ; String description ;

6.用户建表 （通过MySql脚本）
url: "/data/createTableByScript"
data: {
	userid : ,
	tableName : ,
	map  : ["sql": "sql语句" ] ,
	success : model.addAttribute("result",true);
              model.addAttribute("tableID",tableID);
    失败：     model.addAttribute("result",false);

}


7.用户导入数据到自建表中
url: "/data/importData"
data: {
	userid : ,
	tableName : ,
	file : ..//暂时没想好是什么格式，后端直接用的String[] lines解析每一行的数据
}

8.查看用户自建表列表
url: "/data/allTable"
data: {
	userid : ..
}

9.查看某张表的属性（有哪些列）
url: "/data/tableDetail"
data: {
	tableName : ..
}

10.创建实验
url: "/experiment/createExperiment"
data: {
	userid : ,
	experimentName : ,
	description : ..
}

11.查看实验
url: "/experiment/allExperiment"
data: {
	userid : ..
}


